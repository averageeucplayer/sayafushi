name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-22.04
            extra-deps: |
              sudo apt-get update
              sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          - os: macos-latest
            extra-deps: |
              # Add macOS-specific dependencies if needed
              echo "macOS dependencies (if any)"
          - os: windows-latest
            extra-deps: |
              # Windows-specific prep steps
              echo "Windows pre-build prep"

    environment: PROD
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache-dependency-path: web/package-lock.json
          cache: 'npm'

      - run: npm ci
        working-directory: ./web
      - run: 7z x images.7z
        working-directory: ./web/static
      - run: npm run build
        working-directory: ./web

      - name: Prepare environment
        shell: bash
        run: |
          echo "Preparing ${{ matrix.os }}"
          ${{ matrix.extra-deps }}


      - name: Import code signing certificate
        if: matrix.os == 'windows-latest'
        run: ./tools/import-certificate.ps1
        shell: pwsh
        env:
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}

      - uses: dtolnay/rust-toolchain@1.89.0

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          includeRelease: true
          tagName: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          releaseDraft: false
          prerelease: false
